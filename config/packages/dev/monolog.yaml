monolog:
    # can use logrotate
    handlers:
        #filter_for_errors:
        #    type: fingers_crossed
        #    type: deduplication
        #    # if *one* log is error or higher, pass *all* to file_log
        #    action_level: info
        #    handler: file_log

        # @see https://github.com/symfony/monolog-bundle/blob/master/DependencyInjection/Configuration.php

        # stack, first handler called
        main:
            type: stream
            path: "%kernel.logs_dir%/%kernel.environment%.log"
            level: debug
            channels: ['!event', '!doctrine']
            max_files: 10
            formatter: App\Application\Logger\Formatter\TextFormatter

        # Buffers all records until closing the handler and then pass them as batch
        buffering:
            type: buffer
            handler: my_eventing
            buffer_size: 10
            channels: ['event']
            level: debug
            bubble: true
            flush_on_overflow: true

        my_eventing:
            type: stream
            path: "%kernel.logs_dir%/%kernel.environment%.event.log"
            level: debug
            channels: ['event']
            max_files: 10

        doctrine:
            type: stream
            path: "%kernel.logs_dir%/%kernel.environment%.doctrine.log"
            level: debug
            channels: ['doctrine']
            max_files: 10

        console:
            type: console
            process_psr_3_messages: false
            channels: ['!event', '!doctrine', '!console']

        # Stores all log messages during a request but only passes them to a second handler
        # if one of the messages reaches an action_level
        # Log file will contain all the details about the problematic request
        fc:
            type: fingers_crossed
            handler: console
            action_level: error
            excluded_http_codes: [403, 404, { 400: ['^/foo', '^/bar'] }]
            excluded_404s: true
            passthru_level: debug # level name or int value for messages to always flush, disabled by default

        # grouped:
        #     type: group
        #     members: [main, console]
        
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type: firephp
        #    level: info
        #chromephp:
        #    type: chromephp
        #    level: info