security:
    encoders:
        App\Application\Security\AppUser:
            algorithm: auto # Argon2

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            id: App\Application\Security\UserProvider
        memory_provider: 
            memory:
                users:    
                    alpha: { password: 'b3t@', roles: ['ROLE_ADMIN'] }
        all_users:
            chain:
                providers: ['memory_provider', 'app_user_provider']

    firewalls:
        # first pattern matched, first used!
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # basic: 
        #     pattern: ^/basic
        #     http_basic:
        #         realm: Securing

        remote:
            pattern: ^/remote 
            remote_user: # from server or .env
                provider: app_user_provider
                user: custom_one

        main:
            anonymous: lazy # prevents the session from being started if there is no need for authorization
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            logout:
                path: app_logout
                # target: app_any_route
                # success_handler: service LogoutSuccessHandlerInterface
    
    role_hierarchy:
        ROLE_ADMIN:  ROLE_USER
        ROLE_CUSTOM: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN, ip: 127.0.0.1, port: 8080, host: symfony\.com$, methods: [GET] }
        # - { path: ^/profile, roles: ROLE_USER }
