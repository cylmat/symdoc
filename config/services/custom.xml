<?xml version="1.0" encoding="UTF-8" ?>
<!-- config/services.xml -->

<container xmlns="http://symfony.com/schema/dic/services" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services">

    <parameters key="my_parameters" type="collection">
        <parameter key="my_param">testing-param</parameter>
    </parameters>

    <services>
        <defaults public="false" autowire="true" autoconfigure="false"/>

        <service id="App\Domain\MessageHandler\MessageHandler">
            <tag name="messenger.message_handler" handles="App\Domain\Message\Message" />
        </service>

        <service id="twitter_client_2" class="App\Application\Service\TwitterClient">
            <!-- abstract=true factory=<class> -->
            <call method="withConfiguredSerializer" returns-clone="true">
                <argument type="service" id="logger"/>
            </call>
            <!--factory service="NewsletterManagerFactory" method="createNewsletterManager" /-->
        </service>

        <!-- 
            Services that are injected at runtime are called synthetic services.
            They just have to be declared to exists, then injected into container with Container::set() 
        -->
        <!-- shared get the same instance -->
        <service id="runtime_injected" synthetic="true" shared="true"  public="true"/>

        <service id="custom_route_loader_service" class="App\Application\Service\Route\CustomRouteLoader">
            <tag name="routing.route_loader" />
        </service>

        <service id="custom_route_loader" class="App\Application\Routing\CustomLoader">
            <tag name="routing.loader" />
        </service>

        <!-- ERROR CONTROLLER (framework.yaml) -->
        <service id="app_error_controller" alias="App\Application\Controller\Error\AppErrorController"/>
        <service id="App\Application\Controller\Error\AppErrorController">
                <argument type="service" id="http_kernel" />
                <argument>%kernel.error_controller%</argument>
                <argument type="service" id="error_renderer" />
                <tag name="controller.service_arguments" />
        </service>

    </services>

</container>